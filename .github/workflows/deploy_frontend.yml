name: Deploy revostate Frontend

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - main
    types:
      - closed
  repository_dispatch:
    types: [deploy_frontend]
  workflow_dispatch:

jobs:
  deploy:
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref == 'development' || github.event.action == 'deploy_frontend' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "22"
      PROJECT_PATH: "/home/ubuntu/projects/revostate/frontend"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build Project
        env:
          NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
        run: npm run build

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Ensure Project Directory Exists on VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            mkdir -p "${{ env.PROJECT_PATH }}"

      - name: Deploy Built Files to VPS
        run: |
          # Copy package.json files (needed for runtime)
          rsync -avz --chmod=ugo=rwX \
            -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }}" \
            package.json package-lock.json \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:"${{ env.PROJECT_PATH }}/" || {
              echo "Error: rsync failed for package files"; exit 1;
            }
            
          # Copy the .next directory (built files)
          rsync -avz --chmod=ugo=rwX \
            -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }}" \
            .next/ public/ \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:"${{ env.PROJECT_PATH }}/.next/" || {
              echo "Error: rsync failed for .next directory"; exit 1;
            }
            
          # Copy public directory
          rsync -avz --chmod=ugo=rwX \
            -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }}" \
            public/ \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:"${{ env.PROJECT_PATH }}/public/" || {
              echo "Error: rsync failed for public directory"; exit 1;
            }

      - name: Install Production Dependencies and Start Application on VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            cd "${{ env.PROJECT_PATH }}"
            
            # Install only production dependencies
            npm ci --omit=dev --legacy-peer-deps
            
            # Start or restart the application
            echo "Restarting application with PM2..."
            
            if pm2 describe revostate-frontend > /dev/null 2>&1; then
              echo "Reloading existing PM2 process..."
              pm2 reload revostate-frontend
            else
              echo "Starting new PM2 process..."
              pm2 start npm --name "revostate-frontend" -- start
            fi
            
            pm2 save
