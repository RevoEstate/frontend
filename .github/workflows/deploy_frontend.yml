name: Deploy revostate Frontend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed
  repository_dispatch:
    types: [deploy_frontend]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '18'
      PROJECT_PATH: '/home/ubuntu/projects/revostate/frontend'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build Frontend
        env:
          NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}
        run: npm run build

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Deploy Code to VPS
        run: |
          rsync -avz --delete --exclude "node_modules" -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }}" ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:"${{ env.PROJECT_PATH }}/"

      - name: Build and Start Application on VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            cd "${{ env.PROJECT_PATH }}"

            # Ensure package.json exists
            if [ ! -f "package.json" ]; then
              echo "Error: package.json not found in ${PROJECT_PATH}"
              exit 1
            fi

            # Ensure Node.js is set up properly
            export PATH=$PATH:/usr/local/bin:/usr/bin:/bin:$HOME/.npm-global/bin:$HOME/.nvm/versions/node/v18/bin
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm use 18 || nvm install 18

            # Install dependencies
            npm install --legacy-peer-deps

            # Build the project
            npm run build

            # Ensure .next directory exists
            if [ ! -d ".next" ]; then
              echo "Build failed: .next directory not found"
              exit 1
            fi

            # Install PM2 globally if not installed
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              npm install -g pm2
            fi

            # Start or restart the application
            echo "Restarting application with PM2..."

            if pm2 describe revostate-frontend > /dev/null 2>&1; then
              echo "Reloading existing PM2 process..."
              pm2 reload revostate-frontend
            else
              echo "Starting new PM2 process..."
              pm2 start npm --name "revostate-frontend" -- start --watch
            fi

            pm2 save
