name: Deploy RevoState Frontend
description: Deploy the RevoState frontend to a VPS using SSH and rsync with optimized dependency handling

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed
  repository_dispatch:
    types: [deploy_frontend]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '18'
      PROJECT_PATH: '/home/ubuntu/projects/revostate/frontend'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Only needed if you want to run tests in GitHub CI before deployment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Deploy Code to VPS
        run: |
          rsync -avz --delete --exclude='node_modules' --exclude='.next' --exclude='.git' \
            -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }}" \
            ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:"${{ env.PROJECT_PATH }}/"

      - name: Build & Restart on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd "${{ env.PROJECT_PATH }}"
            
            # Setup node environment and dependencies
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm use ${{ env.NODE_VERSION }} || nvm install ${{ env.NODE_VERSION }}
            
            # Use frozen lockfile for deterministic installs
            npm ci --production
            
            # Build the application
            npm run build
            
            # Restart the application using PM2
            pm2 reload revostate-frontend || pm2 start npm --name "revostate-frontend" -- start
            pm2 save

      - name: Verify Deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Check if service is running
            pm2 show revostate-frontend
            
            # Health check - adjust port as needed for your app
            curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 | grep 200 || exit 1

      - name: Reload Nginx
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            sudo nginx -t && sudo systemctl reload nginx
